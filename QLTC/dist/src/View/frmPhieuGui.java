/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.DAO;
import Controller.HinhThucXLDL;
import Controller.InHoaDonXLDL;
import Controller.KNCSDL;
import Controller.KhachHangXLDL;
import Controller.PhieuGuiXLDL;
import Model.ReportPhieuGui;
import Model.TblChiTietPhieuGui;
import Model.TblDichVu;
import Model.TblHinhThuc;
import Model.TblInHoaDon;
import Model.TblKhachHang;
import Model.TblPhieuGui;
import com.google.zxing.BarcodeFormat;
import com.google.zxing.EncodeHintType;
import com.google.zxing.MultiFormatWriter;

import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;

import com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.event.ItemEvent;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Cong Dan
 */
public class frmPhieuGui extends javax.swing.JInternalFrame {

    /**
     * Creates new form frmPhieuGui
     */
    KhachHangXLDL khDL;
    HinhThucXLDL htXLDL;
    PhieuGuiXLDL pgDL;
    DefaultTableModel table;
    DAO dao;
    static InHoaDonXLDL inhoaDon;
    Color mauxanh = new Color(0, 112, 192);

    public frmPhieuGui() {
        initComponents();
        khDL = new KhachHangXLDL();
        htXLDL = new HinhThucXLDL();
        inhoaDon = new InHoaDonXLDL();

        pgDL = new PhieuGuiXLDL();
        loadAnh(lblSearch, "src\\img\\tk.png");
        dao = new DAO("jdbc:sqlserver://localhost:1433;databaseName=QLTC;username=sa;password=123;");
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
        loadNV();
        loadmaKH();
        loadmaHT();
        btnLuu.setEnabled(false);
        btnLuu.setBackground(Color.GRAY);
    }

    void loadAnh(JLabel lbl, String fileanh) {
        //TODO add your handling code here:
        ImageIcon icon = new ImageIcon(fileanh);
        Image image = icon.getImage().getScaledInstance(40, 40, Image.SCALE_SMOOTH);
        lbl.setIcon(new ImageIcon(image));
    }

    void loadNV() {
        ArrayList<TblPhieuGui> list;
        try {
            list = pgDL.getListNV();
            table = (DefaultTableModel) tblPhieuGui.getModel();
            for (TblPhieuGui nv : list) {
                table.addRow(new Object[]{nv.getMaPhieuGui(), nv.getTenKH(), nv.getNgayGui(), nv.getLoai(), nv.getTrangThai(), nv.getTongTien()});
            }
        } catch (SQLException ex) {

        }
    }

    void loadmaKH() {

        try {
            ArrayList<TblKhachHang> KH = khDL.getListNV();
            for (TblKhachHang kh : KH) {
                cboMaKhachHang.addItem(kh);
            }
        } catch (Exception ex) {

        }
    }

    void loadmaHT() {
        try {
            ArrayList<TblHinhThuc> KH = htXLDL.getListNV();
            for (TblHinhThuc kh : KH) {
                cboMaHinhThuc.addItem(kh);
            }
        } catch (Exception ex) {

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtTongTien = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtMaPhieuGui = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jdcNgayGui = new com.toedter.calendar.JDateChooser();
        cboMaKhachHang = new javax.swing.JComboBox<>();
        cboMaHinhThuc = new javax.swing.JComboBox<>();
        btnXoa = new rojerusan.RSButtonMetro();
        btnThem = new rojerusan.RSButtonMetro();
        btnSua = new rojerusan.RSButtonMetro();
        btnLuu = new rojerusan.RSButtonMetro();
        btnTinh = new rojerusan.RSButtonMetro();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPhieuGui = new rojeru_san.complementos.RSTableMetro();
        btnIn = new rojerusan.RSButtonMetro();
        btnHuy = new rojerusan.RSButtonMetro();
        txtTimKiem = new app.bolivia.swing.JCTextField();
        lblSearch = new javax.swing.JLabel();
        cboTrangThai = new javax.swing.JComboBox<>();
        txtSongay = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnTinh1 = new rojerusan.RSButtonMetro();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setText("Tổng Tiền:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 300, -1, -1));

        txtTongTien.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel1.add(txtTongTien, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 290, 500, 46));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Hình Thức:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 100, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel7.setText("Trạng Thái:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 230, -1, -1));

        txtMaPhieuGui.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtMaPhieuGui.setEnabled(false);
        jPanel1.add(txtMaPhieuGui, new org.netbeans.lib.awtextra.AbsoluteConstraints(235, 93, 510, 46));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel1.setText("Thông Tin Phiếu Gửi");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(587, 13, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("Ngày gửi:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Mã Phiếu Gửi:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 97, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel8.setText("Tên khách Hàng:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, -1, -1));

        jdcNgayGui.setDateFormatString("yyyy-MM-dd");
        jdcNgayGui.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel1.add(jdcNgayGui, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 280, 510, 48));

        cboMaKhachHang.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel1.add(cboMaKhachHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 180, 510, 46));

        cboMaHinhThuc.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboMaHinhThuc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboMaHinhThucItemStateChanged(evt);
            }
        });
        jPanel1.add(cboMaHinhThuc, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 93, 500, 46));

        btnXoa.setText("Xóa");
        btnXoa.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel1.add(btnXoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 360, 117, 55));

        btnThem.setText("Thêm");
        btnThem.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel1.add(btnThem, new org.netbeans.lib.awtextra.AbsoluteConstraints(83, 358, 128, 55));

        btnSua.setText("Sửa");
        btnSua.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel1.add(btnSua, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 360, 117, 55));

        btnLuu.setText("Lưu");
        btnLuu.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });
        jPanel1.add(btnLuu, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 360, 117, 55));

        btnTinh.setText("Chi Tiết");
        btnTinh.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnTinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTinhActionPerformed(evt);
            }
        });
        jPanel1.add(btnTinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(1460, 360, 100, 60));

        tblPhieuGui.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã phiếu gửi", "Tên khách hàng", "Ngày gửi", "Hình thức", "Trạng thái", "Tổng tiền"
            }
        ));
        tblPhieuGui.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        tblPhieuGui.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        tblPhieuGui.setFuenteFilas(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        tblPhieuGui.setFuenteFilasSelect(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        tblPhieuGui.setRowHeight(25);
        tblPhieuGui.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPhieuGuiMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblPhieuGui);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 499, 1588, 460));

        btnIn.setText("In");
        btnIn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInActionPerformed(evt);
            }
        });
        jPanel1.add(btnIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1260, 360, 117, 55));

        btnHuy.setText("Hủy");
        btnHuy.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });
        jPanel1.add(btnHuy, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 360, 117, 55));

        txtTimKiem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTimKiem.setPlaceholder("Tìm kiếm tại đây...");
        jPanel1.add(txtTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 440, 430, 40));

        lblSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblSearchMouseClicked(evt);
            }
        });
        jPanel1.add(lblSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(1590, 440, 40, 40));

        cboTrangThai.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboTrangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chưa thanh toán", "Đã thanh toán" }));
        cboTrangThai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTrangThaiActionPerformed(evt);
            }
        });
        jPanel1.add(cboTrangThai, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 220, 502, 46));

        txtSongay.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel1.add(txtSongay, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 160, 230, 46));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setText("Số ngày gửi");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 170, 140, 30));

        btnTinh1.setText("Tính");
        btnTinh1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnTinh1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTinh1ActionPerformed(evt);
            }
        });
        jPanel1.add(btnTinh1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1390, 160, 80, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTinhActionPerformed
        // TODO add your handling code here:
        TblKhachHang kh = (TblKhachHang) cboMaKhachHang.getSelectedItem();
        String makhachhang = String.valueOf(kh.getMaKH());
        frmChiTietPhieuGui ctpg = new frmChiTietPhieuGui(txtMaPhieuGui.getText().toString(), makhachhang.toString());

        ctpg.setVisible(true);
    }//GEN-LAST:event_btnTinhActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        them = true;
        sua = false;
        xoa = false;
        btnThem.setEnabled(false);
        btnThem.setBackground(Color.GRAY);
        btnSua.setEnabled(false);
        btnSua.setBackground(Color.GRAY);
        btnXoa.setEnabled(false);
        btnXoa.setBackground(Color.GRAY);
        btnLuu.setEnabled(true);
        btnLuu.setBackground(mauxanh);
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        them = false;
        sua = true;
        xoa = false;
        btnThem.setEnabled(false);
        btnThem.setBackground(Color.GRAY);
        btnSua.setEnabled(false);
        btnSua.setBackground(Color.GRAY);
        btnXoa.setEnabled(false);
        btnXoa.setBackground(Color.GRAY);
        btnLuu.setEnabled(true);
        btnLuu.setBackground(mauxanh);
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        them = false;
        sua = false;
        xoa = true;
        btnThem.setEnabled(false);
        btnThem.setBackground(Color.GRAY);
        btnSua.setEnabled(false);
        btnSua.setBackground(Color.GRAY);
        btnXoa.setEnabled(false);
        btnXoa.setBackground(Color.GRAY);
        btnLuu.setEnabled(true);
        btnLuu.setBackground(mauxanh);
    }//GEN-LAST:event_btnXoaActionPerformed
    boolean them, sua, xoa;
    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        // TODO add your handling code here:
        if (them) {
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault());

            TblKhachHang kh = (TblKhachHang) cboMaKhachHang.getSelectedItem();
            String makhachhang = String.valueOf(kh.getMaKH());

            String ngaygui = dateFormat.format(jdcNgayGui.getDate());

            TblHinhThuc ht = (TblHinhThuc) cboMaHinhThuc.getSelectedItem();
            String mahinhthuc = String.valueOf(ht.getMaHinhThuc());

            String trangthai = cboTrangThai.getSelectedItem().toString();

            try {
                Connection conn = dao.getConnect();
                String caulenh = "INSERT INTO tbl_PhieuGui VALUES('" + makhachhang + "','" + ngaygui + "','" + mahinhthuc + "',N'" + trangthai + "','" + txtTongTien.getText() + "')";
                boolean a = dao.Lenh(caulenh, conn);
                if (a) {
                    tblPhieuGui.removeAll();
                    table.setRowCount(0);
                    loadNV();
                    JOptionPane.showMessageDialog(this, "Thêm thành công");
                } else {
                    JOptionPane.showMessageDialog(this, "Thêm KHÔNG thành công");
                }
            } catch (SQLException ex) {
                Logger.getLogger(frmPhieuGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (sua) {
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault());
            Integer maphieugui = Integer.parseInt(txtMaPhieuGui.getText());
            TblKhachHang kh = (TblKhachHang) cboMaKhachHang.getSelectedItem();
            String makhachhang = String.valueOf(kh.getMaKH());
            String ngaygui = dateFormat.format(jdcNgayGui.getDate());
            TblHinhThuc ht = (TblHinhThuc) cboMaHinhThuc.getSelectedItem();
            String mahinhthuc = String.valueOf(ht.getMaHinhThuc());
            String trangthai = cboTrangThai.getSelectedItem().toString();

            try {
                Connection conn = dao.getConnect();
                String caulenh = "UPDATE tbl_PhieuGui SET MaKH='" + makhachhang + "',NgayGui='" + ngaygui + "',MaHinhThuc='" + mahinhthuc + "',TrangThai=N'" + trangthai + "',TongTien='" + txtTongTien.getText() + "'where MaPhieuGui=" + maphieugui;
                boolean a = dao.Lenh(caulenh, conn);
                if (a) {
                    tblPhieuGui.removeAll();
                    table.setRowCount(0);
                    loadNV();
                    JOptionPane.showMessageDialog(this, "Sửa thành công");
                } else {
                    JOptionPane.showMessageDialog(this, "Sửa KHÔNG thành công");
                }
            } catch (SQLException ex) {
                Logger.getLogger(frmPhieuGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (xoa) {
            Integer maphieugui = Integer.parseInt(txtMaPhieuGui.getText());
            try {
                Connection conn = dao.getConnect();
                String caulenh = "DELETE FROM tbl_PhieuGui WHERE MaPhieuGui=" + maphieugui;
                boolean a = dao.Lenh(caulenh, conn);
                if (a) {
                    tblPhieuGui.removeAll();
                    table.setRowCount(0);
                    loadNV();
                    JOptionPane.showMessageDialog(this, "Xóa thành công");
                } else {
                    JOptionPane.showMessageDialog(this, "Xóa KHÔNG thành công");
                }
            } catch (SQLException ex) {
                Logger.getLogger(frmPhieuGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnLuuActionPerformed

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
        // TODO add your handling code here:
        txtMaPhieuGui.setText("");
        txtTongTien.setText("");
        tblPhieuGui.removeAll();
        table.setRowCount(0);
        loadNV();
        btnThem.setEnabled(true);
        btnThem.setBackground(mauxanh);
        btnSua.setEnabled(true);
        btnSua.setBackground(mauxanh);
        btnXoa.setEnabled(true);
        btnXoa.setBackground(mauxanh);
        btnLuu.setEnabled(false);
        btnLuu.setBackground(Color.GRAY);
    }//GEN-LAST:event_btnHuyActionPerformed
    void hienthitxt(int i) {
        TableModel model = tblPhieuGui.getModel();
        txtMaPhieuGui.setText(model.getValueAt(i, 0).toString());
        String cbosub = model.getValueAt(i, 1).toString();
        for (int j = 0; j < cboMaKhachHang.getItemCount(); j++) {
            if (cboMaKhachHang.getItemAt(j).toString().equalsIgnoreCase(cbosub)) {
                cboMaKhachHang.setSelectedIndex(j);
            }
        }
        Date date = null;
        try {
            date = new SimpleDateFormat("yyyy-MM-dd").parse(model.getValueAt(i, 2).toString());
        } catch (ParseException ex) {
            Logger.getLogger(frmNhanVien.class.getName()).log(Level.SEVERE, null, ex);
        }
        jdcNgayGui.setDate(date);
        String cbomaht = model.getValueAt(i, 3).toString();
        for (int j = 0; j < cboMaHinhThuc.getItemCount(); j++) {
            if (cboMaHinhThuc.getItemAt(j).toString().equalsIgnoreCase(cbomaht)) {
                cboMaHinhThuc.setSelectedIndex(j);
            }
        }
        cboTrangThai.setSelectedItem(model.getValueAt(i, 4).toString());
        txtTongTien.setText(model.getValueAt(i, 5).toString());
    }

    //Repory

    private void tblPhieuGuiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPhieuGuiMouseClicked
        // TODO add your handling code here:
        int i = tblPhieuGui.getSelectedRow();
        hienthitxt(i);
    }//GEN-LAST:event_tblPhieuGuiMouseClicked

    //in hóa đơn
    private static JasperReport report;

    private static InputStream imageToInpuStream(ImageIcon img) throws Exception {
        BufferedImage bimage = new BufferedImage(img.getImage().getWidth(null), img.getImage().getHeight(null), BufferedImage.TYPE_INT_ARGB);
        Graphics2D bGr = bimage.createGraphics();
        bGr.drawImage(img.getImage(), 0, 0, null);
        bGr.dispose();
        BufferedImage bimg = bimage;
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        ImageIO.write(bimg, "jpg", baos);
        return new ByteArrayInputStream(baos.toByteArray());
    }
    
    private static Collection getData(String ma) throws Exception {
        KNCSDL kn=new KNCSDL();
        ArrayList<ReportPhieuGui> list=new ArrayList<>();
        Connection conn=kn.getConnect();
        String sql="SELECT tbl_PhieuGui.*,tbl_KhachHang.TenKH,tbl_HinhThuc.Loai,tbl_ChiTietPhieuGui.MaSoThuCung,tbl_ChiTietPhieuGui.MaChuong FROM tbl_PhieuGui,tbl_ChiTietPhieuGui,tbl_KhachHang,tbl_HinhThuc where tbl_PhieuGui.MaPhieuGui=tbl_ChiTietPhieuGui.MaPhieuGui and tbl_KhachHang.MaKH=tbl_PhieuGui.MaKH and tbl_HinhThuc.MaHinhThuc=tbl_PhieuGui.MaHinhThuc and tbl_PhieuGui.MaPhieuGui="+ma;
        Statement statement=(Statement) conn.createStatement();
        ResultSet result=statement.executeQuery(sql);
        while(result.next()){
            ReportPhieuGui nv=new ReportPhieuGui();
            nv.setMaPhieuGui(result.getLong(1));
            nv.setTenKhachHang( result.getString(7));
            nv.setNgayGui(result.getDate(3).toString());
            nv.setHinhThuc(result.getString(8));
            nv.setChuong(String.valueOf(result.getLong(10)));
            nv.setMaThuCung(result.getLong(9));
            nv.setImage((InputStream) (new FileInputStream("src/img/qr.png")));
            list.add(nv);
        }
        return list;
        
    }

    void loadchitietphieugui() {

    }

    public static void print(String ma) {
        try {
            JRBeanCollectionDataSource jcd = new JRBeanCollectionDataSource(getData(ma));
            JasperPrint print = JasperFillManager.fillReport(report, null, jcd);
            if (false) {
                JasperPrintManager.printReport(print, true);    //  print auto
            } else {
                JasperViewer.viewReport(print, false);  //  view
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }


    private void btnInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInActionPerformed
        // TODO add your handling code here:
         TblKhachHang kh = (TblKhachHang) cboMaKhachHang.getSelectedItem();
            String makhachhang = String.valueOf(kh.getMaKH());
            
        try {
            Connection conn = dao.getConnect();
            String caulenh="update tbl_Chuong set TrangThai=N'Trống' from tbl_Chuong,tbl_ChiTietPhieuGui where tbl_Chuong.MaChuong=tbl_ChiTietPhieuGui.MaChuong and tbl_ChiTietPhieuGui.MaPhieuGui="+Long.parseLong(txtMaPhieuGui.getText().toString());
            String cl="update tbl_PhieuGui set TrangThai=N'Đã thanh toán' from tbl_PhieuGui where MaPhieuGui="+txtMaPhieuGui.getText();
            String causql="update tbl_ThuCungKyGui set TrangThai=N'Đã nhận' from tbl_ThuCungKyGui where MaKH="+makhachhang;
            boolean a= dao.Lenh(caulenh,conn);
            boolean b= dao.Lenh(cl,conn);
            boolean c= dao.Lenh(causql,conn);
            String QrCodeData = txtMaPhieuGui.getText().toString();
            String filePath = "src/img/qr.png";
            String charset = "UTF-8";
            Map<EncodeHintType, ErrorCorrectionLevel> hintMap = new HashMap<EncodeHintType, ErrorCorrectionLevel>();
            hintMap.put(EncodeHintType.ERROR_CORRECTION, ErrorCorrectionLevel.L);
            BitMatrix matrix = new MultiFormatWriter().encode(
                    new String(QrCodeData.getBytes(charset), charset),
                    BarcodeFormat.QR_CODE, 200, 200, hintMap);

            MatrixToImageWriter.writeToFile(matrix, filePath.substring(filePath.lastIndexOf('.') + 1), new File(filePath));
            System.out.println("Qr code has been generated at the location " + filePath);

            report = JasperCompileManager.compileReport("src/View/ReportPhieuGui.jrxml");
            print(txtMaPhieuGui.getText().toString());
        } catch (Exception e) {
            System.out.println(e);

        }


    }//GEN-LAST:event_btnInActionPerformed

    private void lblSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSearchMouseClicked
        // TODO add your handling code here:
        tblPhieuGui.removeAll();
        table.setRowCount(0);
        String tk = txtTimKiem.getText();
        ArrayList<TblPhieuGui> list;
        try {
            list = pgDL.getListPhieuGui(tk);
            table = (DefaultTableModel) tblPhieuGui.getModel();
            for (TblPhieuGui nv : list) {
                table.addRow(new Object[]{nv.getMaPhieuGui(), nv.getTenKH(), nv.getNgayGui(), nv.getLoai(), nv.getTrangThai(), nv.getTongTien()});
            }
        } catch (SQLException ex) {

        }
    }//GEN-LAST:event_lblSearchMouseClicked

    private void cboTrangThaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTrangThaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboTrangThaiActionPerformed
    double tongtien=0;
    private void cboMaHinhThucItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboMaHinhThucItemStateChanged
        // TODO add your handling code here:
        if(evt.getStateChange() == ItemEvent.SELECTED){
           TblHinhThuc ch = (TblHinhThuc) cboMaHinhThuc.getSelectedItem();
            long madv = ch.getMaHinhThuc();
            try {
                TblHinhThuc dv= htXLDL.getHT(madv);
              
                tongtien= Double.parseDouble(dv.getGia().toString());
            } catch (SQLException ex) {
                Logger.getLogger(frmPhieuGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_cboMaHinhThucItemStateChanged

    private void btnTinh1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTinh1ActionPerformed
        // TODO add your handling code here:
        txtTongTien.setText(String.valueOf(tongtien * Integer.parseInt(txtSongay.getText())) );
    }//GEN-LAST:event_btnTinh1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojerusan.RSButtonMetro btnHuy;
    private rojerusan.RSButtonMetro btnIn;
    private rojerusan.RSButtonMetro btnLuu;
    private rojerusan.RSButtonMetro btnSua;
    private rojerusan.RSButtonMetro btnThem;
    private rojerusan.RSButtonMetro btnTinh;
    private rojerusan.RSButtonMetro btnTinh1;
    private rojerusan.RSButtonMetro btnXoa;
    private javax.swing.JComboBox<TblHinhThuc> cboMaHinhThuc;
    private javax.swing.JComboBox<TblKhachHang> cboMaKhachHang;
    private javax.swing.JComboBox<String> cboTrangThai;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.toedter.calendar.JDateChooser jdcNgayGui;
    private javax.swing.JLabel lblSearch;
    private rojeru_san.complementos.RSTableMetro tblPhieuGui;
    private javax.swing.JTextField txtMaPhieuGui;
    private javax.swing.JTextField txtSongay;
    private app.bolivia.swing.JCTextField txtTimKiem;
    private javax.swing.JTextField txtTongTien;
    // End of variables declaration//GEN-END:variables
}
